{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# Introduction\nScalekit API is modeled around the [REST](https://en.wikipedia.org/wiki/REST) architecture style. That means, our API has predictable resource-oriented URLs, accepts form-encoded request bodies and produces JSON formatted responses, uses standard HTTP verbs and error codes.\n\n## Getting Started\nIf you are just getting started, you can also refer to our [Quick Start Guide](/single-sign-on/quickstart-sso).\n\nApart from REST APIs, we have published SDKs in some of the popular languages as shown below. You can use these SDKs and integrate with Scalekit much faster.\n\n- [NodeJS](https://github.com/scalekit-inc/scalekit-sdk-node)\n- [Go Lang](https://github.com/scalekit-inc/scalekit-sdk-go)\n\nSome additional instructions around using our APIs\n\n- API Endpoint Host must use the `Environment URL` of the environment you are targeting.\n- API requests without appropriate authentication headers will fail with 401 status code.\n\nRead below to understand more about how to authenticate the API calls and how to handle errors appropriately.\n\n\n# API Authentication\nScalekit API uses [OAuth2 Client Credentials](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials) based authentication. You can view and manage the necessary information from your `API Config` section in the Scalekit Dashboard.\n\nYou will need the following information to authenticate with Scalekit APIs\n- Client ID\n- Client Secret\n- Environment URL\n\nYou can obtain a secure token by making `POST` call to the `https://{ENV_URL}/oauth/token` endpoint and sending client_id and client_secret as part of the request body.\n\n```shell\n$ curl https://{ENV_URL}/oauth/token \\\n  -X POST \\\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\n  -d 'client_id={client_id}' \\\n  -d 'client_secret={client_secret}' \\\n  -d 'grant_type=client_credentials'\\\n```\n\nUpon successful processing, you will receive the access token as part of the JSON response as shown in example below:\n```json\n{\n  \"access_token\": \"DCRD10-e7c5c8139165228a82e442445fe01c16\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 1799\n}\n```\nThe `access_token` is the OAuth access token you need to use for all subsequent API calls to Scalekit.\n\nTo make a request to one of our APIs, you need to include the access token in the Authorization header of the request as Bearer 'access_token' like the following example shows:\n```shell\n$ curl --request GET \"https://{ENV_URL}/api/v1/organizations\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Authorization: Bearer {access_token}\"\n```\n\nPlease make sure that you keep your Client Secrets safely. Do not share your client secret in publicly accessible areas such as GitHub, client-side code, etc. Refer to [this guide](/security/client-secrets) to understand some of the best practices around keeping client secrets secure.\n\nOur SDKs will automatically handle the API authentication and error handling to make the job of using our APIs much easier for you.\n\n# Error Handling\nAs mentioned earlier, Scalekit APIs return appropriate HTTP Status Codes along with the detailed error messages in case of invalid usage of APIs.\n\nIn general:\n- `200 or 201`: API request is successful\n- `400`: The request was unacceptable, often due to missing a required parameter.\n- `401`: Invalid Authentication Headers found in the request.\n- `404`: Resource not found\n- `429`: Too many requests hit the API too quickly. Retry the request after a cool-off period.\n- `500 or 501 or 504`: Something went wrong at our end. However rare they are, we automatically log these requests for proactive support and fixing the underlying issue.\n\nAlong with HTTP Status Codes, we also respond with detailed error messages. An example error message for a 401 error is shown below.\n\n```json\n{\n    \"code\": 16,\n    \"message\": \"Token empty\",\n    \"details\":\n    [\n        {\n            \"@type\": \"type.googleapis.com/scalekit.v1.errdetails.ErrorInfo\",\n            \"error_code\": \"UNAUTHENTICATED\"\n        }\n    ]\n}\n```\n\nWe strongly recommend you to handle errors gracefully while writing code using our SDKs.\n",
    "title": "Scalekit APIs",
    "contact": {
      "name": "Scalekit",
      "url": "https://scalekit.com",
      "email": "support@scalekit.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0"
  },
  "host": "$ENV_URL",
  "paths": {
    "/.well-known/openid-configurations": {
      "get": {
        "description": "Returns the OpenID Connect configuration values from the provider's Well-Known Configuration Endpoint, per the specification (https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest). \n\nSample Response below.\n```\n{\n  \"issuer\": \"https://rexinc.scalekit.com\",\n  \"authorization_endpoint\": \"https://rexinc.scalekit.com/oauth/authorize\",\n  \"token_endpoint\": \"https://rexinc.scalekit.com/oauth/token\",\n  \"introspection_endpoint\": \"https://rexinc.scalekit.com/oauth/introspect\",\n  \"userinfo_endpoint\": \"https://rexinc.scalekit.com/userinfo\",\n  \"revocation_endpoint\": \"https://rexinc.scalekit.com/revoke\",\n  \"end_session_endpoint\": \"https://rexinc.scalekit.com/end_session\",\n  \"jwks_uri\": \"https://rexinc.scalekit.com/keys\",\n  \"scopes_supported\": [\n    \"openid\",\n    \"profile\",\n    \"offline_access\"\n  ],\n  \"response_types_supported\": [\n    \"code\"\n  ],\n  \"response_modes_supported\": [\n    \"query\"\n  ],\n  \"grant_types_supported\": [\n    \"authorization_code\",\n    \"client_credentials\",\n    \"refresh_token\"\n  ],\n  \"subject_types_supported\": [\n    \"public\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"request_object_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"token_endpoint_auth_methods_supported\": [\n    \"none\",\n    \"client_secret_basic\",\n    \"client_secret_post\",\n    \"private_key_jwt\"\n  ],\n  \"token_endpoint_auth_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"revocation_endpoint_auth_methods_supported\": [\n    \"none\",\n    \"client_secret_basic\",\n    \"client_secret_post\",\n    \"private_key_jwt\"\n  ],\n  \"revocation_endpoint_auth_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"introspection_endpoint_auth_methods_supported\": [\n    \"client_secret_basic\",\n    \"private_key_jwt\"\n  ],\n  \"introspection_endpoint_auth_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"claims_supported\": [\n    \"sub\",\n    \"aud\",\n    \"exp\",\n    \"iat\",\n    \"iss\",\n    \"auth_time\",\n    \"nonce\",\n    \"acr\",\n    \"amr\",\n    \"c_hash\",\n    \"at_hash\",\n    \"act\",\n    \"scopes\",\n    \"client_id\",\n    \"azp\",\n    \"preferred_username\",\n    \"name\",\n    \"family_name\",\n    \"given_name\",\n    \"locale\",\n    \"email\",\n    \"email_verified\",\n    \"phone_number\",\n    \"phone_number_verified\"\n  ],\n  \"code_challenge_methods_supported\": [\n    \"S256\"\n  ],\n  \"ui_locales_supported\": [\n    \"en\"\n  ],\n  \"request_parameter_supported\": true,\n  \"request_uri_parameter_supported\": false\n}\n\n```",
        "tags": [
          "OpenID Metadata"
        ],
        "summary": "OpenID Provider metadata URL",
        "operationId": "OpenID_WellKnownEndpoint",
        "responses": {
          "200": {
            "description": "Success . Please refer to the OpenID Provider Metadata properties here ( https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata )",
            "schema": {}
          }
        }
      }
    },
    "/api/v1/connections": {
      "get": {
        "description": "Get filtered connections: Retrieves a list of available connections in the environment based on specified criteria",
        "tags": [
          "Connection"
        ],
        "summary": "List All Connections",
        "operationId": "ConnectionService_ListConnections",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier for the organization",
            "name": "organization_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Email domain to filter connections by organization",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "description": "placeholder",
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of connections",
            "schema": {
              "$ref": "#/definitions/connectionsListConnectionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "description": "Retrieve a paginated list of all organizations within the environment. Use the page_token from the response to access subsequent pages of results",
        "tags": [
          "Organization"
        ],
        "summary": "List All Organizations",
        "operationId": "OrganizationService_ListOrganization",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of results to be returned. Max supported page_size is 30",
            "name": "page_size",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Token to access the next page of results",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of organizations",
            "schema": {
              "$ref": "#/definitions/organizationsListOrganizationsResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a new organization to represent a tenant within your application",
        "tags": [
          "Organization"
        ],
        "summary": "Create a New Organization",
        "operationId": "OrganizationService_CreateOrganization",
        "parameters": [
          {
            "description": "Organization details",
            "name": "organization",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Organization details",
              "$ref": "#/definitions/v1organizationsCreateOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "schema": {
              "$ref": "#/definitions/organizationsCreateOrganizationResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "description": "Fetch detailed information about a specific organization using its unique identifier.",
        "tags": [
          "Organization"
        ],
        "summary": "Retrieve Organization Information",
        "operationId": "OrganizationService_GetOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier to an Organization",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier that links an Organization Object to your app's tenant, stored as an External ID",
            "name": "external_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved organization details",
            "schema": {
              "$ref": "#/definitions/organizationsGetOrganizationResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove an existing organization from the environment using its unique identifier",
        "tags": [
          "Organization"
        ],
        "summary": "Delete an Organization",
        "operationId": "OrganizationService_DeleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to delete",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "External ID of the organization to delete",
            "name": "external_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted Successfully",
            "schema": {}
          }
        }
      },
      "patch": {
        "description": "Update the details of an existing organization using its unique identifier",
        "tags": [
          "Organization"
        ],
        "summary": "Update Organization Information",
        "operationId": "OrganizationService_UpdateOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "organization",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Organization Parameters to be updated",
              "$ref": "#/definitions/v1organizationsUpdateOrganization"
            }
          },
          {
            "type": "string",
            "description": "External ID of the organization to be updated",
            "name": "external_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "schema": {
              "$ref": "#/definitions/organizationsUpdateOrganizationResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/portal_links": {
      "put": {
        "description": "Generates an Admin Portal link. The Admin Portal will be used by IT Admins to create and manage the SSO connection in their organization. The link generated via API will be valid for 1 week",
        "tags": [
          "Admin Portal"
        ],
        "summary": "Generate Portal link",
        "operationId": "OrganizationService_GeneratePortalLink",
        "parameters": [
          {
            "type": "string",
            "description": "Organization ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "sso",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "directory_sync",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Admin Portal link created successfully",
            "schema": {
              "$ref": "#/definitions/organizationsGeneratePortalLinkResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/settings": {
      "patch": {
        "description": "Update the settings of the Organization. The settings include the SSO settings, Directory sync settings etc.",
        "tags": [
          "Organization"
        ],
        "summary": "Update Organization Settings",
        "operationId": "OrganizationService_UpdateOrganizationSettings",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to update settings",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "settings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organizationsOrganizationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/organizationsGetOrganizationResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}": {
      "get": {
        "description": "Obtain detailed information about a specific connection within an organization",
        "tags": [
          "Connection"
        ],
        "summary": "Retrieve Connection Details",
        "operationId": "ConnectionService_GetConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Organization ID for the Connection.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Connection ID. Unique ID for the connection",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection details",
            "schema": {
              "$ref": "#/definitions/connectionsGetConnectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}:disable": {
      "patch": {
        "description": "Deactivate an existing SSO connection for the specified organization.",
        "tags": [
          "Connection"
        ],
        "summary": "Disable a Connection for an Organization",
        "operationId": "ConnectionService_DisableConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization associated with the connection",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier for the connection to be toggled",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Connection disabled successfully",
            "schema": {
              "$ref": "#/definitions/connectionsToggleConnectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}:enable": {
      "patch": {
        "description": "Activate an existing SSO connection for the specified organization",
        "tags": [
          "Connection"
        ],
        "summary": "Enable a Connection for an Organization",
        "operationId": "ConnectionService_EnableConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization associated with the connection",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier for the connection to be toggled",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Connection enabled successfully",
            "schema": {
              "$ref": "#/definitions/connectionsToggleConnectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories": {
      "get": {
        "tags": [
          "Directory"
        ],
        "summary": "List Directories for an Organization",
        "operationId": "DirectoryService_ListDirectories",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier for the organization. This ID is used to retrieve directories associated with the specified organization.",
            "name": "organization_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of directories",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoriesResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{directory_id}/groups": {
      "get": {
        "description": "Retrieves a list of all groups within a specified directory for an organization. This endpoint allows you to view the group structures within your connected Directory Providers.",
        "tags": [
          "Directory"
        ],
        "summary": "List Groups in Directory",
        "operationId": "DirectoryService_ListDirectoryGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory within the organization",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of groups to return per page (default: 10, max: 30)",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token for pagination. Use the value returned in the previous response to fetch the next page of results",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Filter groups updated after the specified timestamp (RFC 3339 format)",
            "name": "updated_after",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, include the full group payload in the response; otherwise, only basic information is returned (default: false)",
            "name": "include_detail",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of groups from the specified directory",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoryGroupsResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{directory_id}/users": {
      "get": {
        "description": "Retrieves a list of all users within a specified directory for an organization. This endpoint allows you to view user accounts associated with your connected Directory Providers.",
        "tags": [
          "Directory"
        ],
        "summary": "List Users in Directory",
        "operationId": "DirectoryService_ListDirectoryUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory within the organization",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of users to return per page. Maximum value is 30. If not specified, defaults to 10",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token for pagination. Use the value returned in the 'next_page_token' field of the previous response to retrieve the next page of results",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the response will include the full user payload with all available details. If false or not specified, only essential user information will be returned",
            "name": "include_detail",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter users by their membership in a specific directory group",
            "name": "directory_group_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Filter users that were updated after the specified timestamp. Use ISO 8601 format",
            "name": "updated_after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of users from the specified directory",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoryUsersResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific directory within an organization. This endpoint allows you to view the properties and configuration of a connected Directory Provider",
        "tags": [
          "Directory"
        ],
        "summary": "Get Directory",
        "operationId": "DirectoryService_GetDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier to an Organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of a Directory",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the directory details",
            "schema": {
              "$ref": "#/definitions/directoriesGetDirectoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}:disable": {
      "patch": {
        "description": "Disables a directory, preventing it from being used for user management and authentication",
        "tags": [
          "Directory"
        ],
        "summary": "Disable a Directory",
        "operationId": "DirectoryService_DisableDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory within the organization",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the directory",
            "schema": {
              "$ref": "#/definitions/directoriesToggleDirectoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}:enable": {
      "patch": {
        "description": "Enables a directory, allowing it to be used for user management and authentication",
        "tags": [
          "Directory"
        ],
        "summary": "Enable a Directory",
        "operationId": "DirectoryService_EnableDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory within the organization",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/directoriesToggleDirectoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations:search": {
      "get": {
        "description": "List all Organizations in the Environment with given query. The query can be any one of name, organizationID or externalID, if more than one organization matches the query string multiple results are returned. The response contains page_token that can be used to access the next page of results.",
        "tags": [
          "Organization"
        ],
        "summary": "Search Organizations",
        "operationId": "OrganizationService_SearchOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "query to search for. The search is case insensitive. minimum length should be 3",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of results to be returned. Max supported page_size is 30",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/organizationsSearchOrganizationsResponse"
            }
          }
        }
      }
    },
    "/api/v1/providers": {
      "get": {
        "description": "Fetch a comprehensive list of available connection providers for integration",
        "tags": [
          "Connection"
        ],
        "summary": "Retrieve Connection Providers",
        "operationId": "ConnectionService_GetProviders",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of connection providers",
            "schema": {
              "$ref": "#/definitions/connectionsGetProvidersResponse"
            }
          }
        }
      }
    },
    "/oauth/authorize": {
      "get": {
        "description": "Authorization URL initiates the Login flow with Scalekit.\n\nScalekit expects atleast one of the following parameters to be present. The parameters are used to determine the SSO connection used to Login in the user. \n\n`domain` - Email domain of the user. Domain should be mapped to an Organization. The SSO connection from the org would be used to login to the app.\n\n`connection_id` - ID of the SSO connection. If the Connection's status is `active`, the user will be redirected to the SSO Connection's identity provider configured.\n\n`organization_id` -  ID of Organization. The user will be redirected to the SSO connection's identity provider configured for that organization.\n\n`provider` -  ID of SSO Provider, Incase of Social Logins . e.g `google`",
        "tags": [
          "Authentication"
        ],
        "summary": "Authorization URL",
        "operationId": "OAuth_AuthorizeEndpoint",
        "parameters": [
          {
            "type": "string",
            "example": "code",
            "description": "The client ID string that you obtain from the API Credentials page",
            "name": "client_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "uri",
            "example": "https://mysaasapp.com/redirect_uri",
            "description": "Determines where the response is sent. The value of this parameter must exactly match one of the authorized redirect values that you set in the API Credentials page (including the HTTP or HTTPS scheme, case, and trailing '/', if any).",
            "name": "redirect_uri",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "hostname",
            "example": "acmecorp.com",
            "description": "Domain part of the email address that is mapped to an organization. Example. yourcustomer.com",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "example": "conn_16796494564719556",
            "description": "Connection ID for which the SSO flow must be initiated for. If the Connection's status is `active`, the user will be redirected to the SSO Connection's identity provider configured",
            "name": "connection_id",
            "in": "query"
          },
          {
            "type": "string",
            "example": "org_16796494564719556",
            "description": "Organization ID for which the SSO flow must be initiated for. Based on the organization ID supplied, the user will be redirected to the SSO connection's identity provider configured for that organization.",
            "name": "organization_id",
            "in": "query"
          },
          {
            "type": "string",
            "example": "github",
            "description": "Key for the Social SSO Provider. This is common to all Organizations. e.g. `google`, `github`, `linkedin`, `gitlab`, `microsoft`, `salesforce`",
            "name": "provider",
            "in": "query"
          },
          {
            "enum": [
              "code"
            ],
            "type": "string",
            "example": "code",
            "description": "Value must be `code`",
            "name": "response_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "example": "openid email profile",
            "description": "Value must be `openid email profile`",
            "name": "scope",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "example": "S256",
            "description": "An opaque string that is round-tripped in the protocol; that is to say, it is returned back as-is as a URI parameter in the Basic flow. The state can be useful for correlating requests and responses. Because your redirect_uri can be guessed, using a state value can increase your assurance that an incoming connection is the result of an authentication request initiated by your app.\n\nState will be useful if you would like to retain some information about the user that you would like to use at the end of the login flow. E.g. deep link URL in your product to redirect the user to after a successful login.\n\nIf you generate a random string or encode the hash of some client state (e.g., a cookie) in this state variable, you can validate the response to additionally ensure that the request and response originated in the same browser. This additional validation offers protection against attacks such as cross-site request forgery.",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "example": "code",
            "description": "A random value generated by your app that enables replay protection.",
            "name": "nonce",
            "in": "query"
          },
          {
            "type": "string",
            "format": "email",
            "example": "johndoe@acmecorp.com",
            "description": "When your app knows the email address of the user it is trying to authenticate, it can provide this parameter as a hint to the authentication server and Scalekit will pass this information to your customer's identity provider. Some identity providers prefill the login box with this value to make the login experience easier for the end user.",
            "name": "login_hint",
            "in": "query"
          },
          {
            "type": "string",
            "example": "a_rand_txt_34533",
            "description": "A challenge code generated from `code_verifier` that is required for PKCE flows. This is used ensure if the request was handled by the right parties. The string is stored by Scalekit to be used when validating the token request with a `code_verifier`.  A code_challenge is generated as follows `code_challenge = SHA256(code_verifier)` .",
            "name": "code_challenge",
            "in": "query"
          },
          {
            "enum": [
              "plain",
              "S256"
            ],
            "type": "string",
            "example": "S256",
            "description": "The algorithm used to process the code challenge. The value should be `S256`",
            "name": "code_challenge_method",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Success",
            "schema": {}
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "description": "The code provided to the Redirect URI. Code can be exchanged for a ID Token containing the user details using the Token URL.",
        "tags": [
          "Authentication"
        ],
        "summary": "Token URL",
        "operationId": "OAuth_TokenEndpoint",
        "parameters": [
          {
            "type": "string",
            "description": "The code received by the Redirect URI as part of the Authentication Response.",
            "name": "code",
            "in": "body",
            "required": true
          },
          {
            "type": "string",
            "description": "The redirect URI where this code was received. This will used to validate the code to make the code was infact generated for this redirect_uri.",
            "name": "redirect_uri",
            "in": "body",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique client ID that represents your application.",
            "name": "client_id",
            "in": "body",
            "required": true
          },
          {
            "type": "string",
            "description": "The client secret to authorize the client.",
            "name": "client_secret",
            "in": "body",
            "required": true
          },
          {
            "type": "string",
            "description": "Grant Type must be `authorization_code`.",
            "name": "grant_type",
            "in": "body"
          },
          {
            "type": "string",
            "description": "Used in PKCE flow, code_verifier is derived from the `code_challenge` presented at the Authorization Endpoint",
            "name": "code_verifier",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Code validated Successfuly",
            "schema": {
              "$ref": "#/definitions/oauthTokenResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "commonsRegionCode": {
      "type": "string",
      "enum": [
        "US",
        "EU"
      ]
    },
    "connectionsConfigurationType": {
      "type": "string",
      "enum": [
        "DISCOVERY",
        "MANUAL"
      ]
    },
    "connectionsConnection": {
      "type": "object",
      "properties": {
        "attribute_mapping": {
          "description": "placeholder",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configuration_type": {
          "description": "Method used to configure the connection",
          "$ref": "#/definitions/connectionsConfigurationType",
          "example": "MANUAL"
        },
        "debug_enabled": {
          "description": "Enables debug mode, allowing non-HTTPS endpoints",
          "type": "boolean",
          "example": true
        },
        "enabled": {
          "description": "Indicates if the connection is active for organization users",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "Unique identifier for the Connection",
          "type": "string",
          "example": "conn_2123312131125533"
        },
        "key_id": {
          "description": "Unique identifier for the connection key",
          "type": "string"
        },
        "oauth_config": {
          "description": "OAuth Configuration if ConnectionType == OAUTH",
          "$ref": "#/definitions/connectionsOAuthConnectionConfig"
        },
        "oidc_config": {
          "description": "OIDC Configuration if ConnectionType == OIDC",
          "$ref": "#/definitions/connectionsOIDCConnectionConfig"
        },
        "organization_id": {
          "description": "Unique identifier of the associated organization",
          "type": "string",
          "example": "org_2123312131125533"
        },
        "provider": {
          "description": "SSO provider (e.g., OKTA, Google, Azure AD)",
          "$ref": "#/definitions/connectionsConnectionProvider",
          "example": "OKTA"
        },
        "saml_config": {
          "description": "SAML Configuration if ConnectionType == SAML",
          "$ref": "#/definitions/connectionsSAMLConnectionConfigResponse"
        },
        "status": {
          "description": "Current status of the connection",
          "$ref": "#/definitions/connectionsConnectionStatus",
          "readOnly": true,
          "example": "IN_PROGRESS"
        },
        "test_connection_uri": {
          "description": "URI for testing the connection",
          "type": "string",
          "example": "MANUAL"
        },
        "type": {
          "description": "Authentication protocol (OIDC or SAML)",
          "$ref": "#/definitions/connectionsConnectionType",
          "example": "OIDC"
        }
      }
    },
    "connectionsConnectionProvider": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN",
        "PING_IDENTITY",
        "JUMPCLOUD",
        "CUSTOM",
        "GITHUB",
        "GITLAB",
        "LINKEDIN",
        "SALESFORCE",
        "MICROSOFT",
        "IDP_SIMULATOR"
      ]
    },
    "connectionsConnectionStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "IN_PROGRESS",
        "COMPLETED"
      ]
    },
    "connectionsConnectionType": {
      "type": "string",
      "enum": [
        "OIDC",
        "SAML",
        "PASSWORD",
        "OAUTH"
      ]
    },
    "connectionsGetConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "description": "Connection details",
          "$ref": "#/definitions/connectionsConnection"
        }
      }
    },
    "connectionsGetProvidersResponse": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsProvider"
          }
        }
      }
    },
    "connectionsIDPCertificate": {
      "type": "object",
      "properties": {
        "certificate": {
          "description": "IDP Certificate",
          "type": "string"
        },
        "create_time": {
          "description": "Certificate Creation Time",
          "type": "string",
          "format": "date-time",
          "example": "2021-09-01T00:00:00Z"
        },
        "expiry_time": {
          "description": "Certificate Expiry Time",
          "type": "string",
          "format": "date-time",
          "example": "2021-09-01T00:00:00Z"
        },
        "id": {
          "description": "Certificate ID",
          "type": "string",
          "example": "cert_123123123123"
        },
        "issuer": {
          "description": "Certificate Issuer",
          "type": "string",
          "example": "https://youridp.com/service/saml"
        }
      }
    },
    "connectionsListConnection": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates whether Connection active for Org users",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "Connection ID",
          "type": "string",
          "example": "conn_2123312131125533"
        },
        "organization_id": {
          "description": "Organization ID",
          "type": "string",
          "example": "org_2123312131125533"
        },
        "provider": {
          "description": "SSO Connection Provider",
          "$ref": "#/definitions/connectionsConnectionProvider",
          "example": "CUSTOM"
        },
        "status": {
          "description": "Connection Status",
          "$ref": "#/definitions/connectionsConnectionStatus",
          "readOnly": true,
          "example": "IN_PROGRESS"
        },
        "type": {
          "description": "Connection Protocol OIDC / SAML ",
          "$ref": "#/definitions/connectionsConnectionType",
          "example": "OIDC"
        }
      }
    },
    "connectionsListConnectionsResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "description": "List of Connection Objects",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsListConnection"
          }
        }
      }
    },
    "connectionsNameIdFormat": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "EMAIL",
        "TRANSIENT",
        "PERSISTENT"
      ]
    },
    "connectionsOAuthConnectionConfig": {
      "type": "object",
      "properties": {
        "authorize_uri": {
          "description": "Authorize URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/authorize"
        },
        "client_id": {
          "description": "Client ID",
          "type": "string",
          "example": "oauth_client_id"
        },
        "client_secret": {
          "description": "Client Secret",
          "type": "string",
          "example": "oauth_client_secret"
        },
        "pkce_enabled": {
          "description": "PKCE Enabled",
          "type": "boolean",
          "example": true
        },
        "redirect_uri": {
          "description": "Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/oauth/redirect"
        },
        "scopes": {
          "description": "OIDC Scopes",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "openid",
            "profile"
          ]
        },
        "token_uri": {
          "description": "Token URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/token"
        },
        "user_info_uri": {
          "description": "User Info URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/userinfo"
        }
      }
    },
    "connectionsOIDCConnectionConfig": {
      "type": "object",
      "properties": {
        "authorize_uri": {
          "description": "Authorize URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/authorize"
        },
        "client_id": {
          "description": "Client ID",
          "type": "string",
          "example": "oauth_client_id"
        },
        "client_secret": {
          "description": "Client Secret",
          "type": "string",
          "example": "oauth_client_secret"
        },
        "discovery_endpoint": {
          "description": "Discovery Endpoint",
          "type": "string",
          "example": "https://youridp.com/service/oauth/.well-known/openid-configuration"
        },
        "issuer": {
          "description": "Issuer URL",
          "type": "string",
          "example": "https://youridp.com/service/oauth"
        },
        "jwks_uri": {
          "description": "JWKS URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/jwks"
        },
        "pkce_enabled": {
          "description": "PKCE Enabled",
          "type": "boolean",
          "example": true
        },
        "redirect_uri": {
          "description": "Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/oauth/redirect"
        },
        "scopes": {
          "description": "OIDC Scopes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectionsOIDCScope"
          },
          "example": [
            "openid",
            "profile"
          ]
        },
        "token_auth_type": {
          "description": "Token Auth Type",
          "$ref": "#/definitions/connectionsTokenAuthType",
          "example": "URL_PARAMS"
        },
        "token_uri": {
          "description": "Token URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/token"
        },
        "user_info_uri": {
          "description": "User Info URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/userinfo"
        }
      }
    },
    "connectionsOIDCScope": {
      "type": "string",
      "enum": [
        "openid",
        "profile",
        "email",
        "address",
        "phone"
      ]
    },
    "connectionsProvider": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Provider Description",
          "type": "string",
          "example": "Sign In With Google"
        },
        "display_name": {
          "description": "Provider Display Name",
          "type": "string",
          "example": "Google"
        },
        "key_id": {
          "description": "Provider Key ID",
          "type": "string",
          "example": "google"
        }
      }
    },
    "connectionsRequestBinding": {
      "type": "string",
      "enum": [
        "HTTP_POST",
        "HTTP_REDIRECT"
      ]
    },
    "connectionsSAMLConnectionConfigResponse": {
      "type": "object",
      "properties": {
        "allow_idp_initiated_login": {
          "description": "Allow IDP Initiated Login",
          "type": "boolean",
          "example": true
        },
        "assertion_encrypted": {
          "description": "Assertion Encrypted",
          "type": "boolean",
          "example": true
        },
        "certificate_id": {
          "description": "Certificate ID",
          "type": "string",
          "example": "cer_35585423166144613"
        },
        "default_redirect_uri": {
          "description": "Default Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/saml/redirect"
        },
        "force_authn": {
          "description": "Force Authn",
          "type": "boolean",
          "example": true
        },
        "idp_certificates": {
          "description": "IDP Certificates",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsIDPCertificate"
          }
        },
        "idp_entity_id": {
          "description": "IDP Entity ID",
          "type": "string",
          "example": "https://youridp.com/service/saml"
        },
        "idp_metadata_url": {
          "description": "IDP Metadata URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/metadata"
        },
        "idp_name_id_format": {
          "description": "IDP Name ID Format",
          "$ref": "#/definitions/connectionsNameIdFormat",
          "example": "EMAIL"
        },
        "idp_slo_request_binding": {
          "description": "IDP SLO Request Binding",
          "$ref": "#/definitions/connectionsRequestBinding",
          "example": "HTTP_POST"
        },
        "idp_slo_url": {
          "description": "IDP SLO URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/slo"
        },
        "idp_sso_request_binding": {
          "description": "IDP SSO Request Binding",
          "$ref": "#/definitions/connectionsRequestBinding",
          "example": "HTTP_POST"
        },
        "idp_sso_url": {
          "description": "IDP SSO URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/sso"
        },
        "saml_signing_option": {
          "description": "SAML Signing Option",
          "$ref": "#/definitions/connectionsSAMLSigningOptions",
          "example": "SAML_ONLY_RESPONSE_SIGNING"
        },
        "sp_assertion_url": {
          "description": "SP Assertion URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/assertion"
        },
        "sp_entity_id": {
          "description": "SP Entity ID",
          "type": "string",
          "example": "https://yourapp.com/service/saml"
        },
        "sp_metadata_url": {
          "description": "SP Metadata URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/metadata"
        },
        "ui_button_title": {
          "description": "UI Button Title",
          "type": "string",
          "example": "Login with SSO"
        },
        "want_request_signed": {
          "description": "Want Request Signed",
          "type": "boolean",
          "example": true
        }
      }
    },
    "connectionsSAMLSigningOptions": {
      "type": "string",
      "title": "enums all",
      "enum": [
        "NO_SIGNING",
        "SAML_ONLY_RESPONSE_SIGNING",
        "SAML_ONLY_ASSERTION_SIGNING",
        "SAML_RESPONSE_ASSERTION_SIGNING",
        "SAML_RESPONSE_OR_ASSERTION_SIGNING"
      ]
    },
    "connectionsToggleConnectionResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates whether Connection active for Organization users",
          "type": "boolean",
          "example": false
        },
        "error_message": {
          "description": "Error message if the connection toggle fails",
          "type": "string",
          "example": "placeholder"
        }
      }
    },
    "connectionsTokenAuthType": {
      "type": "string",
      "enum": [
        "URL_PARAMS",
        "BASIC_AUTH"
      ]
    },
    "directoriesAttributeMapping": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "map_to": {
          "type": "string"
        }
      }
    },
    "directoriesAttributeMappings": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesAttributeMapping"
          }
        }
      }
    },
    "directoriesDirectory": {
      "type": "object",
      "properties": {
        "attribute_mappings": {
          "description": "Mappings between directory attributes and Scalekit user and group attributes",
          "$ref": "#/definitions/directoriesAttributeMappings"
        },
        "directory_endpoint": {
          "description": "The endpoint URL generated by Scalekit for synchronizing users and groups from the Directory Provider",
          "type": "string",
          "example": "https://yourapp.scalekit.com/api/v1/directoies/dir_123212312/scim/v2"
        },
        "directory_provider": {
          "description": "The Directory Provider connected to this directory, such as Okta, OneLogin or Microsoft Entra ID",
          "$ref": "#/definitions/directoriesDirectoryProvider",
          "example": "OKTA"
        },
        "directory_type": {
          "description": "Type of the directory, indicating the protocol or standard used for synchronization",
          "$ref": "#/definitions/directoriesDirectoryType",
          "example": "SCIM"
        },
        "enabled": {
          "description": "Indicates whether the directory is currently enabled and actively synchronizing users and groups",
          "type": "boolean",
          "example": true
        },
        "id": {
          "description": "Unique identifier of the directory",
          "type": "string",
          "example": "dir_121312434123312"
        },
        "last_synced_at": {
          "description": "Timestamp of the last successful synchronization of users and groups from the Directory Provider",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "name": {
          "description": "Name of the directory, typically representing the connected Directory Provider",
          "type": "string",
          "example": "Azure AD"
        },
        "organization_id": {
          "description": "Unique identifier of the organization to which the directory belongs",
          "type": "string",
          "example": "org_121312434123312"
        },
        "role_assignments": {
          "description": "Role assignments associated with the directory, defining group based role assignments",
          "$ref": "#/definitions/directoriesRoleAssignments"
        },
        "secrets": {
          "description": "List of secrets used for authenticating and synchronizing with the Directory Provider",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesSecret"
          }
        },
        "stats": {
          "description": "Statistics and metrics related to the directory, such as synchronization status and error counts",
          "$ref": "#/definitions/directoriesStats"
        },
        "total_groups": {
          "description": "Total number of groups in the directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "total_users": {
          "description": "Total number of users in the directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      }
    },
    "directoriesDirectoryGroup": {
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Display Name",
          "type": "string",
          "example": "Admins"
        },
        "group_detail": {
          "description": "Complete Group Details Payload",
          "type": "object"
        },
        "id": {
          "description": "Group ID",
          "type": "string",
          "example": "dirgroup_121312434123312"
        },
        "total_users": {
          "description": "Total Users in the Group",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "updated_at": {
          "description": "Updated At",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        }
      }
    },
    "directoriesDirectoryProvider": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN"
      ]
    },
    "directoriesDirectoryType": {
      "type": "string",
      "enum": [
        "SCIM",
        "LDAP"
      ]
    },
    "directoriesDirectoryUser": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Email",
          "type": "string",
          "example": "johndoe"
        },
        "emails": {
          "description": "Emails",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "family_name": {
          "description": "Last Name",
          "type": "string",
          "example": "Doe"
        },
        "given_name": {
          "description": "First Name",
          "type": "string",
          "example": "John"
        },
        "groups": {
          "description": "Groups",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryGroup"
          }
        },
        "id": {
          "description": "User ID",
          "type": "string",
          "example": "diruser_121312434123312"
        },
        "preferred_username": {
          "description": "Preferred Username",
          "type": "string",
          "example": "johndoe"
        },
        "updated_at": {
          "description": "Updated At",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "user_detail": {
          "description": "Complete User Details Payload",
          "type": "object"
        }
      }
    },
    "directoriesGetDirectoryResponse": {
      "type": "object",
      "properties": {
        "directory": {
          "description": "Retrieves detailed information about a specific directory within an organization. This endpoint allows you to view the properties and configuration of a connected Directory Provider",
          "$ref": "#/definitions/directoriesDirectory"
        }
      }
    },
    "directoriesListDirectoriesResponse": {
      "type": "object",
      "properties": {
        "directories": {
          "description": "A collection of directory objects associated with the organization.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectory"
          }
        }
      }
    },
    "directoriesListDirectoryGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "description": "List of directory groups retrieved from the specified directory. Each group contains information about its members",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryGroup"
          }
        },
        "next_page_token": {
          "description": "Token to retrieve the next page of results. This field is populated when there are more groups available than can be returned in the current response. Use this token in the next request to fetch the subsequent page of groups",
          "type": "string"
        },
        "prev_page_token": {
          "description": "Token to retrieve the previous page of results. This field is populated when there are preceding pages of groups available. Use this token in the next request to fetch the prior page of groups, enabling backward navigation through the paginated results",
          "type": "string"
        },
        "total_size": {
          "description": "Total number of groups available in the directory. This value represents the overall count of groups, regardless of pagination",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "directoriesListDirectoryUsersResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Token to retrieve the next page of results. This field is populated when there are more users available than returned in the current response. Use this token in the 'page_token' field of the next request to fetch the subsequent page of users.",
          "type": "string"
        },
        "prev_page_token": {
          "description": "Token to retrieve the previous page of results. This field is populated when there are preceding pages of users available. Use this token in the 'page_token' field of the next request to fetch the prior page of users, enabling backward navigation through the paginated results.",
          "type": "string"
        },
        "total_size": {
          "description": "Total number of users available in the directory that match the request criteria. This value represents the overall count of users, regardless of pagination.",
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "description": "List of directory users retrieved from the specified directory.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryUser"
          }
        }
      }
    },
    "directoriesRoleAssignment": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group ID for the role mapping",
          "type": "string",
          "example": "dirgroup_121312434123"
        },
        "role_id": {
          "description": "role ID for the role mapping",
          "type": "string",
          "example": "role_12131243412331"
        }
      }
    },
    "directoriesRoleAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesRoleAssignment"
          }
        }
      }
    },
    "directoriesSecret": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "Creation Time",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "directory_id": {
          "description": "Directory ID",
          "type": "string",
          "example": "dir_12362474900684814"
        },
        "expire_time": {
          "description": "Expiry Time",
          "type": "string",
          "format": "date-time",
          "example": "2025-10-01T00:00:00Z"
        },
        "id": {
          "type": "string"
        },
        "last_used_time": {
          "description": "Last Used Time",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "secret_suffix": {
          "description": "Secret Suffix",
          "type": "string",
          "example": "Nzg5"
        },
        "status": {
          "description": "Secret Status",
          "$ref": "#/definitions/directoriesSecretStatus",
          "example": "ACTIVE"
        }
      }
    },
    "directoriesSecretStatus": {
      "type": "string",
      "enum": [
        "INACTIVE"
      ]
    },
    "directoriesStats": {
      "type": "object",
      "properties": {
        "group_updated_at": {
          "description": "Max time of Group Updated At for Directory",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "total_groups": {
          "description": "Total Groups in the Directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "total_users": {
          "description": "Total Users in the Directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "user_updated_at": {
          "description": "Max time of User Updated At for Directory",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        }
      }
    },
    "directoriesToggleDirectoryResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates whether the directory is currently enabled or disabled after the toggle operation. If true, the directory is enabled and actively synchronizing users and groups. If false, the directory is disabled and not synchronizing",
          "type": "boolean",
          "example": true
        },
        "error_message": {
          "description": "If the toggle operation encountered an error, this field will contain a human-readable error message providing more details about the issue. If the operation was successful, this field will be empty",
          "type": "string",
          "example": "Directory is already enabled"
        }
      }
    },
    "oauthTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "description": "Access token ( JWT ) \nA decoded payload example below.\n```\n{\n  \"aud\": [\n    \"prd_skc_12511406029372224\"\n  ],\n  \"exp\": 1715187475,\n  \"iat\": 1715186575,\n  \"iss\": \"https://rexinc.scalekit.com\",\n  \"jti\": \"tkn_18655216756882331\",\n  \"nbf\": 1715186575,\n  \"sub\": \"conn_12652966976715584;johndoe@acmecorp.com\"\n}\n```",
          "type": "string",
          "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6InNua18xMjUxMTQwNjE4MDAzOTQ4OCIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwOi8vcmV4aW5jLnNjYWxla2l0LWRldi5jb206ODg4OCIsInN1YiI6ImNvbm5fMTI2NTI5NjY5NzY3MTU1ODQ7dmlqYXlAYWN0b3IuY29tIiwiYXVkIjpbInByZF9za2NfMTI1MTE0MDYwMjkzNzIyMjQiXSwiZXhwIjoxNzE1MTg3NDc1LCJpYXQiOjE3MTUxODY1NzUsIm5iZiI6MTcxNTE4NjU3NSwianRpIjoidGtuXzE4NjU1MjE2NzU2ODgyMzMxIn0.BdRj65bWTa4gKTuji3WZLOmWiaY9TFMV-lZK_le6yvzOR-NfwciuUDqE_um4dqDzX29Abt3JxCPb601iH33Wrs6iexeOsecqopYgk3IM1aU6tzUrEJ2Yhhza4UlCg856aSLcMyYzdSPIdEqMlyFy7leDMYgXjt4geupv0Qy9spseLfs2HGpZl_wAWRfN_w5HZEvCAR-Zqv6xywQj1G5J8efk6dISsuRE6MZrxDjup1hWhO56hG_7GzNzCrQUgdECs5lzte0d_lfirVbJnrnq4bEPhXJMXhznhf9ja8sasP-Onu7rLFVvMMl_aUrf3gsv0iJP5CfVOx45yr5vPnyWBQ"
        },
        "expires_in": {
          "description": "Expiry in seconds",
          "type": "number",
          "example": 899
        },
        "id_token": {
          "description": "ID Token ( JWT ) \nA decoded payload example below. For More details please refer [ID Token Claims](https://docs.scalekit.com/best-practices/idtoken-claims)\n```\n{\n  \"amr\": [\n    \"conn_12652966976715584\"\n  ],\n  \"at_hash\": \"SEqh15so69NgXdYoHVW6Pw\",\n  \"aud\": [\n    \"prd_skc_12511406029372224\"\n  ],\n  \"azp\": \"prd_skc_12511406029372224\",\n  \"c_hash\": \"BwHUQzZC9To9oOZ3z3NGMg\",\n  \"client_id\": \"prd_skc_12511406029372224\",\n  \"email\": \"johndoe@acmecorp.com\",\n  \"exp\": 1715190175,\n  \"iat\": 1715186575,\n  \"iss\": \"https://rexinc.scalekit.com\",\n  \"oid\": \"org_12649270050061120\",\n  \"sub\": \"conn_12652966976715584;johndoe@acmecorp.com\"\n}\n```",
          "type": "string",
          "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6InNua18xMjUxMTQwNjE4MDAzOTQ4OCIsInR5cCI6IkpXVCJ9.eyJhbXIiOlsiY29ubl8xMjY1Mjk2Njk3NjcxNTU4NCJdLCJhdF9oYXNoIjoiU0VxaDE1c282OU5nWGRZb0hWVzZQdyIsImF1ZCI6WyJwcmRfc2tjXzEyNTExNDA2MDI5MzcyMjI0Il0sImF6cCI6InByZF9za2NfMTI1MTE0MDYwMjkzNzIyMjQiLCJjX2hhc2giOiJCd0hVUXpaQzlUbzlvT1ozejNOR01nIiwiY2xpZW50X2lkIjoicHJkX3NrY18xMjUxMTQwNjAyOTM3MjIyNCIsImVtYWlsIjoidmlqYXlAYWN0b3IuY29tIiwiZXhwIjoxNzE1MTkwMTc1LCJpYXQiOjE3MTUxODY1NzUsImlzcyI6Imh0dHA6Ly9yZXhpbmMuc2NhbGVraXQtZGV2LmNvbTo4ODg4Iiwib2lkIjoib3JnXzEyNjQ5MjcwMDUwMDYxMTIwIiwic3ViIjoiY29ubl8xMjY1Mjk2Njk3NjcxNTU4NDt2aWpheUBhY3Rvci5jb20ifQ.IyHEiM2F70iiEM3yqPtfFKZk4a3L0JMlMz7imBEUUCzsXWWWN1pZdhnyMiUs25jw9FiHgAueHKLfA8igwguWj3HBFDKghQ3TcgzJZii3qeGwum74fkx2TtWQu0c8GqRRZ_S9xMq5JBUKq6ZnoRXw-5LS8rgvQUvdDp-WSxMkIM4wn0OECK9uRPOb4eBaWf3jqzw4UL5EkVPDCK7JIszF1aI-nKIktwi7TO0hzpiDiPXjcR4rkZrWP2Zjmv_LsmUexYEiudYRJMogM7PHmxFTDpdZVmbTDSepCQrRw841hTXd7jKbE7vSporqlCVM2oFADrfzHdk6aClpjEkr79GwZg"
        },
        "token_type": {
          "description": "Token type. Value will be `bearer`",
          "type": "string",
          "example": "Bearer"
        }
      }
    },
    "organizationsCreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "organizationsGeneratePortalLinkResponse": {
      "type": "object",
      "properties": {
        "link": {
          "description": "Admin Portal Link",
          "$ref": "#/definitions/organizationsLink"
        }
      }
    },
    "organizationsGetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "Organization details",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "organizationsLink": {
      "type": "object",
      "properties": {
        "expire_time": {
          "description": "Expiry time of the link. The link is valid for 1 week.",
          "type": "string",
          "format": "date-time",
          "example": "2024-02-06T14:48:00.000Z"
        },
        "id": {
          "description": "Unique Identifier for the link",
          "type": "string",
          "example": "lnk_123123123123123"
        },
        "location": {
          "description": "Location of the link. This is the URL that can be used to access the Admin portal. The link is valid for 1 week.",
          "type": "string",
          "example": "https://scalekit.com/portal/lnk_123123123123123"
        }
      }
    },
    "organizationsListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Token to access the next page of results",
          "type": "string",
          "example": 30
        },
        "organizations": {
          "description": "List of organization objects",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganization"
          }
        },
        "prev_page_token": {
          "description": "Token to access the previous page of results",
          "type": "string",
          "example": 30
        },
        "total_size": {
          "description": "Total number of results",
          "type": "integer",
          "format": "int64",
          "example": 30
        }
      }
    },
    "organizationsOrganization": {
      "type": "object",
      "required": [
        "create_time"
      ],
      "properties": {
        "create_time": {
          "description": "Created Time",
          "type": "string",
          "format": "date-time",
          "title": "Created Time",
          "example": "2024-01-05T14:48:00.000Z"
        },
        "display_name": {
          "description": "Display Name of the Organization",
          "type": "string",
          "title": "Name of the org to be used in display",
          "example": "Acme Corp"
        },
        "external_id": {
          "description": "Unique identifier that links an Organization Object to your app's tenant, stored as an External ID",
          "type": "string",
          "title": "External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp",
          "example": "my_unique_id"
        },
        "id": {
          "description": "Organization ID",
          "type": "string",
          "title": "Id",
          "example": "org_2123312131125533"
        },
        "metadata": {
          "description": "Key value pairs extension attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region_code": {
          "description": "Region code . Only US is supported ",
          "title": "Optional regioncode",
          "$ref": "#/definitions/commonsRegionCode",
          "example": "US"
        },
        "settings": {
          "title": "Organization Settings",
          "$ref": "#/definitions/organizationsOrganizationSettings"
        },
        "update_time": {
          "description": "Updated Time",
          "type": "string",
          "format": "date-time",
          "title": "Updated time"
        }
      }
    },
    "organizationsOrganizationSettings": {
      "type": "object",
      "properties": {
        "features": {
          "description": "Organization settings features such as SSO and SCIM Provisioning",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganizationSettingsFeature"
          }
        }
      }
    },
    "organizationsOrganizationSettingsFeature": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "organizationsSearchOrganizationsResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string"
        },
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganization"
          }
        },
        "prev_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "organizationsUpdateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "Updated organization details",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "protobufNullValue": {
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.",
      "type": "string"
    },
    "v1organizationsCreateOrganization": {
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Display Name of the Organization",
          "type": "string",
          "title": "Name of the org to be used in display",
          "example": "Acme Corp"
        },
        "external_id": {
          "description": "Unique identifier that links an Organization Object to your app's tenant, stored as an External ID",
          "type": "string",
          "title": "External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp",
          "example": "my_unique_id"
        },
        "metadata": {
          "description": "Key value pairs extension attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1organizationsUpdateOrganization": {
      "description": "For update messages ensure the indexes are same as the base model itself.",
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://$ENV_URL/oauth/token"
    }
  },
  "security": [
    {
      "OAuth2": []
    }
  ],
  "tags": [
    {
      "name": "Single Sign-On"
    },
    {
      "description": "Organization represents a customer or a tenant of your product. This is the top level entity and all the resources are mapped to this Organization object. Each organization will be uniquely identified by `organization_id`. You can use this service to create and manage Enterprise SSO Connections for an organization.\n\n**Attributes**\n\n| Attribute Name | Attribute Description |\n|---|---|\n| `id`\u003cbr\u003e_string_ | Unique ID of an Organization. This attribute is required for all API operations to be performed against this organization.  |\n| `display_name`\u003cbr\u003e_string_ | Name of the Organization |\n| `create_time`\u003cbr\u003e_string_ | Timestamp at which this organization record was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2011-10-05T14:48:00.000Z` |\n| `update_time`\u003cbr\u003e_string_ | Timestamp at which this organization record was last updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: \u003cbr\u003e`2021-10-05T14:48:00.000Z` |\n| `external_id`\u003cbr\u003e_string_ | Unique ID of this organization according to your system. You can store your unique ID for this organization in Scalekit's system and later use this to fetch Organization and Connection details. This is helpful if you don't want to persist Scalekit's Unique Identifiers in your database. |\n| `metadata`\u003cbr\u003e_object_ | JSON representation of any additional organization information that you want to store in Scalekit's system. Example: `{\"key\":\"value\"}` |\n| `region_code`\u003cbr\u003e_string_ | Represents the Data Center region in which this organization's data is stored. Currently, it always returns `US` |",
      "name": "Organization"
    },
    {
      "name": "Admin Portal"
    },
    {
      "description": " Connection represents a unique Single Sign-on instance for an Organization. Connection has the configuration needed to establish an SSO and exchange user information securely between Scalekit and your customer's Identity Provider. Depending on the connection type parameter, the corresponding configuration details are found in `oidc_config` or `saml_config` parameter.\n\n**Connection Attributes**\n\n| Attribute Name | Attribute Description |\n|---|---|\n| `id`\u003cbr\u003e_string_ | Unique ID of an SSO Connection. This attribute is required for all API operations to be performed against this connection.  |\n| `provider`\u003cbr\u003e_ENUM_ | Name of the Identity Provider. Possible Values are: `OKTA`, `GOOGLE`, `MICROSOFT_AD`, `AUTH0`, `ONELOGIN`, `PING_IDENTITY`, `JUMPCLOUD`, `CUSTOM` |\n| `type`\u003cbr\u003e_ENUM_ | Protocol type that is used for this connection. Possible values are `SAML` or `OIDC` |\n| `status`\u003cbr\u003e_ENUM_ | Indicates the configuration progress status of the SSO Connection. Possible Values are `DRAFT`, `INPROGRESS`, `COMPLETED`. \u003cbr\u003e_Note_: This doesn't indicate whether this connection is active or not. |\n| `enabled`\u003cbr\u003e_boolean_ | Indicates whether this connection is active or not. Users can only login via active SSO connections. |\n| `organization_id`\u003cbr\u003e_string_ | Organization ID to which this SSO connection belongs to. |\n| `saml_config`\u003cbr\u003e_Object_ | If this connection is of type `SAML`, the configuration details are found in this object. |\n| `oidc_config`\u003cbr\u003e_Object_ | If this connection is of type `OIDC`, the configuration details are found in this object. |\n| `attribute_mapping`\u003cbr\u003e_Object_ | Array of attribute mappings using which the user information received from the Identity Provider is normalized. Example: \u003ccode\u003e \u003cbr/\u003e{ \u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"email\": \"email\",\u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"family_name\": \"lastName\", \u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"given_name\": \"firstName\",\u003cbr/\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\"sub\": \"nameid\" \u003cbr/\u003e} \u003c/code\u003e |\n| `create_time` | Timestamp at which this connection record was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2021-10-05T14:48:00.000Z` |\n| `update_time`\u003cbr\u003e_string_ | Timestamp at which this connection record was last updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2021-10-10T14:48:00.000Z` |",
      "name": "Connection"
    },
    {
      "name": "Directory"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "OpenID Metadata"
    }
  ],
  "externalDocs": {
    "description": "Scalekit Developer Documentation",
    "url": "https://docs.scalekit.com/"
  }
}