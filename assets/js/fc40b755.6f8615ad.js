"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[9365],{9611:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=n(4848),s=n(8453);const i={title:"Fetch User Attributes from Identity Provider",description:"Learn how to manage user authentication flow in your B2B application by fetching user attributes from an Identity Provider after Single Sign-On (SSO). This guide covers redirect handling, token exchange, and user profile rendering using Scalekit.",keywords:["User Attributes","Identity Provider","Single Sign-On","SSO","B2B Application","Authentication Flow","Scalekit","OAuth","User Profile","Next.js"]},o="Fetch User Attributes from Identity Provider",a={id:"sso/guides/setup-sso/handle-user-profile",title:"Fetch User Attributes from Identity Provider",description:"Learn how to manage user authentication flow in your B2B application by fetching user attributes from an Identity Provider after Single Sign-On (SSO). This guide covers redirect handling, token exchange, and user profile rendering using Scalekit.",source:"@site/docs/sso/guides/setup-sso/handle-user-profile.mdx",sourceDirName:"sso/guides/setup-sso",slug:"/sso/guides/setup-sso/handle-user-profile",permalink:"/sso/guides/setup-sso/handle-user-profile",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Fetch User Attributes from Identity Provider",description:"Learn how to manage user authentication flow in your B2B application by fetching user attributes from an Identity Provider after Single Sign-On (SSO). This guide covers redirect handling, token exchange, and user profile rendering using Scalekit.",keywords:["User Attributes","Identity Provider","Single Sign-On","SSO","B2B Application","Authentication Flow","Scalekit","OAuth","User Profile","Next.js"]},sidebar:"ssoSidebar",previous:{title:"Add SSO to your Login Page",permalink:"/sso/guides/setup-sso/build-login-page"},next:{title:"Customize Admin Portal",permalink:"/sso/domain-and-theme-customization"}},l={},c=[{value:"Redirection to the App",id:"redirection-to-the-app",level:2},{value:"<strong>Handling Callback Route</strong>",id:"handling-callback-route",level:2},{value:"Render User Profile",id:"render-user-profile",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{SimpleCode:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SimpleCode",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"fetch-user-attributes-from-identity-provider",children:"Fetch User Attributes from Identity Provider"})}),"\n",(0,r.jsx)(t.p,{children:'After initiating the Single Sign-On (SSO) process, user details are transmitted to your B2B application once they have authenticated with their Identity Provider (IdP). This guide assists in managing the authentication flow, particularly in terms of exchanging the "code" for necessary user profile details to finalize the user\'s login.'}),"\n",(0,r.jsx)(t.admonition,{title:"Note",type:"info",children:(0,r.jsxs)(t.p,{children:["Use this guide in conjunction with the ",(0,r.jsx)(t.a,{href:"https://github.com/scalekit-inc/scalekit-nextjs-example",children:"scalekit-nextjs-example"})," repository and ",(0,r.jsx)(t.a,{href:"/sso/guides/setup-sso/build-login-page",children:"Build Login Page"})," guide."]})}),"\n",(0,r.jsx)(t.h2,{id:"redirection-to-the-app",children:"Redirection to the App"}),"\n",(0,r.jsxs)(t.p,{children:["The authorization URL carries a ",(0,r.jsx)(n,{children:"redirect_uri"})," parameter to callback your B2B app after IdP authentication. For example, in a development environment, the redirect URL may be ",(0,r.jsxs)(n,{children:["http:",(0,r.jsx)("span",{}),"//localhost:3000/auth/callback"]}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Handle the ",(0,r.jsx)(n,{children:"/auth/callback"})," route in your app to receive user details in the form of a token after successful authentication. If authentication fails, your app will receive an error response that needs to be handled appropriately."]}),"\n",(0,r.jsxs)(t.p,{children:["Refer to the ",(0,r.jsx)(t.a,{href:"/sso/guides/key-concepts/redirect-uri",children:"Redirect URI"})," section for valid URIs"]}),"\n",(0,r.jsx)(t.h2,{id:"handling-callback-route",children:(0,r.jsx)(t.strong,{children:"Handling Callback Route"})}),"\n",(0,r.jsx)(t.p,{children:"During redirection, the callback route receives a code as query parameters. Use Scalekit's SDK to retrieve user details and an access token."}),"\n",(0,r.jsxs)(t.p,{children:["The user details, which come in the form of an encoded token, provide your application with information about the user. On the other hand, the access token plays an instrumental role in facilitating subsequent requests to Scalekit API endpoints. For example, the ",(0,r.jsx)(n,{children:"/userinfo"})," endpoint."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="app/auth/callback/route.ts"',children:"const { user, accessToken } = await scalekit.authenticateWithCode(\n  code,\n  <redirectUri>\n);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Store this information as cookies with the ",(0,r.jsx)(n,{children:" httpOnly "})," attribute enabled for secure HTTP calls:"]}),"\n",(0,r.jsx)(t.p,{children:"Here is a code example demonstrating this process. In this example, after setting the cookies, the user is directed to the /me path in the User Interface (UI)."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="app/auth/callback/route.ts"',children:"const url = request.nextUrl.clone();\nurl.searchParams.delete('code');\nurl.pathname = '/me';\nconst response = NextResponse.redirect(url);\nresponse.cookies.set({\n  name: 'user',\n  value: JSON.stringify(user),\n  httpOnly: true,\n  ...(!isDev && { secure: true }),\n});\nresponse.cookies.set({\n  name: 'accessToken',\n  value: accessToken,\n  httpOnly: true,\n  ...(!isDev && { secure: true }),\n});\nreturn response;\n"})}),"\n",(0,r.jsxs)(t.p,{children:["After authentication, redirect the user to the client-side ",(0,r.jsx)(n,{children:"/me"})," page."]}),"\n",(0,r.jsx)(t.h2,{id:"render-user-profile",children:"Render User Profile"}),"\n",(0,r.jsx)(t.p,{children:"Consider this page welcomes the user with their first and last name, along with general option to logout from the app."}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(n,{children:"/me"})," page welcomes the user with their first and last name and provides a logout option."]}),"\n",(0,r.jsx)(t.p,{children:"Here is a Next.js example code:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="app/me/page.tsx"',children:'<Container title="Me">\n  {!user ? (\n    <div className="space-y-4">\n      <h2 className="text-2xl">Access Denied</h2>\n      <p>\n        <Link href="/login" legacyBehavior>\n          <a className="underline underline-offset-4">\n            You must be signed in to view this page\n          </a>\n        </Link>\n      </p>\n    </div>\n  ) : (\n    <div className="space-y-4">\n      <h1>User Logged in!</h1>\n      {user.name && (\n        <h2 className="text-2xl">Welcome: {user.name}</h2>\n      )}\n      {user.givenName && (\n        <h3 className="text-2xl">\n          Your First Name: {user.givenName}\n        </h3>\n      )}\n      {user.familyName && (\n        <h3 className="text-2xl">\n          Your Last Name: {user.familyName}\n        </h3>\n      )}\n      <h3 className="text-2xl">Your Email: {user.email}</h3>\n      {user.username && (\n        <h3 className="text-2xl">Your Username: {user.username}</h3>\n      )}\n      <hr></hr>\n      <form action={logout}>\n        <button type="submit">Logout</button>\n      </form>\n    </div>\n  )}\n</Container>\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(n,{children:"user"})," and ",(0,r.jsx)(n,{children:"logout"})," methods above would invoke ",(0,r.jsx)(n,{children:"getUser()"})," and ",(0,r.jsx)(n,{children:"logOutUser()"})," methods\nto get the cookies or even remove them accordingly."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="service/auth.ts"',children:"export const getUser = async (): Promise<{\n  user: User | null;\n}> => {\n  const user = cookies().get('user')?.value;\n  if (!user) {\n    return { user: null };\n  }\n\n  return {\n    user: JSON.parse(user),\n  };\n};\n\n// delete the cookies when user logs out\nexport const logOutUser = async (): Promise<void> => {\n  cookies().delete('user');\n  cookies().delete('accessToken');\n};\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Handle User Attributes"}),": Implement these steps to effectively handle user attributes from the Identity Provider and manage user authentication in your B2B SaaS application"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);