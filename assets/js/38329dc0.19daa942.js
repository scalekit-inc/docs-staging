"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[6987],{6161:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=i(4848),r=i(8453),n=i(3199);const o={slug:"user-profile",title:"Normalized User Profile in Scalekit",description:"Discover how Scalekit simplifies SSO integration by normalizing user profile information across various identity providers. Learn about the standardized fields and attributes that facilitate seamless identity workflows.",keywords:["Normalized User Profile","Scalekit","SSO","Identity Provider","User Profile Attributes","OAuth","OIDC","SAML","Unified SSO","Identity Workflows"]},d="Normalized User Profile",l={id:"sso/guides/key-concepts/user-profile",title:"Normalized User Profile in Scalekit",description:"Discover how Scalekit simplifies SSO integration by normalizing user profile information across various identity providers. Learn about the standardized fields and attributes that facilitate seamless identity workflows.",source:"@site/docs/sso/guides/key-concepts/4-user-profile.mdx",sourceDirName:"sso/guides/key-concepts",slug:"/sso/guides/key-concepts/user-profile",permalink:"/docs-staging/sso/guides/key-concepts/user-profile",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{slug:"user-profile",title:"Normalized User Profile in Scalekit",description:"Discover how Scalekit simplifies SSO integration by normalizing user profile information across various identity providers. Learn about the standardized fields and attributes that facilitate seamless identity workflows.",keywords:["Normalized User Profile","Scalekit","SSO","Identity Provider","User Profile Attributes","OAuth","OIDC","SAML","Unified SSO","Identity Workflows"]},sidebar:"ssoSidebar",previous:{title:"ID Token Claims",permalink:"/docs-staging/sso/guides/key-concepts/idtoken-claims"},next:{title:"Manage Client Secrets",permalink:"/docs-staging/sso/guides/key-concepts/manage-client-secrets"}},a={},c=[{value:"Full list of User Profile attributes",id:"full-list-of-user-profile-attributes",level:2},{value:"Identity Object attributes",id:"identity-object-attributes",level:3}];function h(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{CodeWithHeader:i,SimpleCode:o}=t;return i||x("CodeWithHeader",!0),o||x("SimpleCode",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"normalized-user-profile",children:"Normalized User Profile"})}),"\n",(0,s.jsx)(t.p,{children:"When a user logs in with SSO, each identity provider shares the user profile information in their own format. This adds\ncomplexity for the application developers to parse the user profile info and code related identity workflows. To make\nthis seamless for developers, Scalekit normalizes the user profile info into a standard set of fields across all\nidentity providers."}),"\n",(0,s.jsx)(t.p,{children:"This means that you'd always receive the user profile payload in a fixed set of fields, irrespective of the identity\nprovider and protocol you interact with. This is one of our foundational aspects of the Unified SSO solution."}),"\n",(0,s.jsx)(i,{title:"Sample Normalized User Profile",children:(0,s.jsx)(n.A,{src:{email:"john.doe@acmecorp.com",email_verified:!0,family_name:"Doe",given_name:"John",locale:"en",name:"John Doe",picture:"https://lh3.googleusercontent.com/a/ACg8ocKNE4TZ...iEma17URCEf=s96-c",sub:"conn_17576372041941092;google-oauth2|104630259163176101050",identities:[{connection_id:"conn_17576372041941092",organization_id:"org_17002852291444836",connection_type:"OIDC",provider_name:"AUTH0",social:!1,provider_raw_attributes:{aud:"ztTgHijLLguDXJQab0oiPyIcDLXXrJX6",email:"john.doe@acmecorp.com",email_verified:!0,exp:1714580633,family_name:"Doe",given_name:"John",iat:1714544633,iss:"https://dev-rmmfmus2g7vverbf.us.auth0.com/",locale:"en",name:"John Doe",nickname:"john.doe",nonce:"Lof9SpxEzs9dhUlJzgrrbQ==",picture:"https://lh3.googleusercontent.com/a/ACg8ocKNE4T...17URCEf=s96-c",sid:"5yqRJIfjPh8c7lr1s2N-IbY6WR8VyaIZ",sub:"google-oauth2|104630259163176101050",updated_at:"2024-04-30T10:02:30.988Z"}}]}})}),"\n","\n",(0,s.jsx)(t.h2,{id:"full-list-of-user-profile-attributes",children:"Full list of User Profile attributes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Profile Attribute"}),(0,s.jsx)(t.th,{children:"Data Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"sub"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"An identifier for the user, as submitted by the Identity Provider that completed the Single Sign-on."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"email"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The user's email address."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"email_verified"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"True if the user's e-mail address has been verified as claimed by the Identity Provider; otherwise false."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"name"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Fully formatted user's name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"family_name"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The user's surname or last name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"given_name"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The user's given name or first name."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"locale"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The user's locale, represented by a BCP 47 language tag. Example: 'en'"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"picture"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"The user's profile picture in URL format"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"identities"})}),(0,s.jsxs)(t.td,{children:["Array of ",(0,s.jsx)(t.a,{href:"#identity-object-attributes",children:"Identity Objects"})]}),(0,s.jsx)(t.td,{children:"Array of all identity information received from the Identity Providers in the raw format"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"identity-object-attributes",children:"Identity Object attributes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Identity Attribute"}),(0,s.jsx)(t.th,{children:"Data Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"organization_id"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Unique ID of the organization to which this user belongs to"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"connection_id"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Unique ID of the connection for which this identity data is fetched from"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"connection_type"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"type of the connection: SAML or OIDC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"provider_name"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"name of the connection provider. Example: Okta, Google, Auth0"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"social"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"Is the connection a social provider (like Google, Microsoft, GitHub etc) or an enterprise connection."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(o,{className:"text--semibold",children:"provider_raw_attributes"})}),(0,s.jsx)(t.td,{children:"object"}),(0,s.jsx)(t.td,{children:"key-value map of all the raw attributes received from the connection provider as-is"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Notes"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(o,{className:"text--semibold",children:"sub"})," field is a concatenation of the\n",(0,s.jsx)(o,{className:"text--semibold",children:"connection_id"})," and a unique identifier assigned to the user by the identity\nprovider."]}),"\n",(0,s.jsx)(t.li,{children:"The identities array may contain multiple objects if the user has authenticated through different methods."}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(o,{className:"text--semibold",children:"provider_raw_attributes"})," object contains all original data from\nthe Identity Provider, which may vary based on the provider and connection type."]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function x(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},3199:(e,t,i)=>{i.d(t,{A:()=>o});i(6540);var s=i(8478),r=i(3413),n=i(4848);const o=e=>{let{src:t}=e;return t?(0,n.jsx)(s.A,{fallback:(0,n.jsx)("div",{children:"Loading..."}),children:()=>(0,n.jsx)(r.iN,{data:t,className:"json-editor-viewer",theme:"default",rootName:""})}):(0,n.jsx)("div",{children:"No data available"})}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>d});var s=i(6540);const r={},n=s.createContext(r);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);